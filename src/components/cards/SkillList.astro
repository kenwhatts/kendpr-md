---
import * as FrontEnd from "../../about/skills/front-end.mdx";
import * as BackEnd from "../../about/skills/back-end.mdx";
import * as Other from "../../about/skills/other.mdx";
import { Image } from "astro:assets";
import type { ImageMetadata } from "astro";

const cardType: string = Astro.props.type;

const card = {
  get type() {
    switch (cardType) {
      case "frontend":
        return FrontEnd;
      case "backend":
        return BackEnd;
      case "others":
        return Other;
      default:
        return;
    }
  },
};

const fetchIcons = import.meta.glob<{ default: ImageMetadata }>(
  "/src/about/skills/icons/headerIcon/*.svg",
);

const cardMatter = card.type?.frontmatter;
---

{
  card.type != null ? (
    <article>
      <div class="grid gap-y-4">
        <div class="relative flex items-center gap-x-4">
          <div class="size-10">
            {fetchIcons[cardMatter?.iconDarkMode] ? (
              <Image
                src={fetchIcons[cardMatter?.iconDarkMode]!()}
                alt=""
                width={40}
                height={40}
                loading="lazy"
              />
            ) : null}
          </div>
          <h2 class="text-2xl">{cardMatter?.title}</h2>
        </div>
        <p>{cardMatter?.description}</p>
      </div>
      <div class="mt-8 prose-h3:mt-5 prose-h3:text-sm prose-ul:grid prose-ul:items-center prose-ul:gap-y-2 prose-li:flex prose-li:items-center prose-li:gap-x-4 prose-li:text-base prose-img:size-8">
        <card.type.Content />
      </div>
    </article>
  ) : null
}
